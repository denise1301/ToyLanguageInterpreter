-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(rH(v1)), (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(rH(v1)), (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [countDown(cnt), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [countDown(cnt), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(2), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(2), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [wH(v2 (rH(v2)*10)), (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [wH(v2 (rH(v2)*10)), (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(rH(v2)), (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(rH(v2)), (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [countDown(cnt), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [countDown(cnt), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(3), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(3), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [(wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [(wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [wH(v3 (rH(v3)*10)), (print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [wH(v3 (rH(v3)*10)), (print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [(print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [(print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(rH(v3)), countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(rH(v3)), countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(4)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(4)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(1), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(1), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(1), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(1), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(rH(v1)), (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(rH(v1)), (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [countDown(cnt), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [countDown(cnt), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(2), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(2), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [wH(v2 (rH(v2)*10)), (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [wH(v2 (rH(v2)*10)), (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(rH(v2)), (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(rH(v2)), (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [countDown(cnt), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [countDown(cnt), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(3), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(3), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [(wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [(wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [wH(v3 (rH(v3)*10)), (print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [wH(v3 (rH(v3)*10)), (print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [(print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [(print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(rH(v3)), countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(rH(v3)), countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(4)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(4)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Int cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = 0
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = 0
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(rH(v1)), (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(rH(v1)), (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [countDown(cnt), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [countDown(cnt), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(2), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [print(2), fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [wH(v2 (rH(v2)*10)), (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [wH(v2 (rH(v2)*10)), (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(rH(v2)), (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(rH(v2)), (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [(countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [countDown(cnt), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [countDown(cnt), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(3), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [print(3), fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: [fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 3
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [(wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [(wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [wH(v3 (rH(v3)*10)), (print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 4
Execution stack: [wH(v3 (rH(v3)*10)), (print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [(print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [(print(rH(v3)); countDown(cnt))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(rH(v3)), countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(rH(v3)), countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [countDown(cnt)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(4)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: [print(4)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 4
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100), (countDown(cnt); print(100))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [countDown(cnt), print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [print(100)]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: []
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: [20, 2, 30, 3, 40, 4, 100, 1, 100]
File table: 
Heap: 1 = 20
2 = 30
3 = 40


-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v1; (Ref(Int) v2; (Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))]
Symbol table: 
Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v2; (Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))]
Symbol table: v1 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Ref(Int) v3; (Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [(Bool cnt; ((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))]
Symbol table: v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = False
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = False
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = False
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v1 2); ((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))]
Symbol table: cnt = False
v1 = (0, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 

-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v2 3); ((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (0, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [((new v3 4); (newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (0, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(newLatch(cnt, rH(v2)); (fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))]
Symbol table: cnt = False
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(fork((wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [(await(cnt); (print(100); (countDown(cnt); print(100))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(wH(v1 (rH(v1)*10)); (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt)))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [wH(v1 (rH(v1)*10)), (print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 2
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 1
Execution stack: [await(cnt), (print(100); (countDown(cnt); print(100)))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


-----------------------------------
Thread ID: 2
Execution stack: [(print(rH(v1)); (countDown(cnt); fork((wH(v2 (rH(v2)*10)); (print(rH(v2)); (countDown(cnt); fork((wH(v3 (rH(v3)*10)); (print(rH(v3)); countDown(cnt))))))))))]
Symbol table: cnt = 1
v1 = (1, Int)
v2 = (2, Int)
v3 = (3, Int)

Output: []
File table: 
Heap: 1 = 20
2 = 3
3 = 4


